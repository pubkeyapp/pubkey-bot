generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Email {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  default   Boolean  @default(false)
  email     String   @unique
  private   Boolean  @default(false)
  verified  Boolean  @default(false)
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
}

model Identity {
  id           String              @id @default(cuid())
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  provider     IdentityProvider
  providerId   String
  name         String?
  accessToken  String?
  refreshToken String?
  profile      Json?
  verified     Boolean             @default(false)
  owner        User                @relation(fields: [ownerId], references: [id])
  ownerId      String
  challenges   IdentityChallenge[]

  @@unique([provider, providerId])
}

model IdentityChallenge {
  id         String           @id @default(cuid())
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  challenge  String           @unique
  signature  String?
  ip         String
  userAgent  String
  verified   Boolean          @default(false)
  identity   Identity         @relation(fields: [provider, providerId], references: [provider, providerId])
  provider   IdentityProvider
  providerId String
}

model User {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  avatarUrl  String?
  developer  Boolean    @default(false)
  name       String?
  password   String?
  role       UserRole   @default(User)
  status     UserStatus @default(Created)
  username   String     @unique
  identities Identity[]
  emails     Email[]
}

enum IdentityProvider {
  Discord
  Solana
}

enum UserRole {
  Admin
  User
}

enum UserStatus {
  Active
  Created
  Inactive
}
